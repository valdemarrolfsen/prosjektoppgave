Automatically generated by Mendeley Desktop 1.17.11
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Preferences -> BibTeX in Mendeley Desktop

@book{Minsky1969,
author = {Minsky and Papert},
title = {{Perceptrons}},
year = {1969}
}
@misc{Esa2009a,
author = {Esa},
title = {{50 years of Earth Observation}},
url = {http://www.esa.int/About{\_}Us/Welcome{\_}to{\_}ESA/ESA{\_}history/50{\_}years{\_}of{\_}Earth{\_}Observation},
urldate = {2017-10-24},
year = {2009}
}
@article{Lary2010,
archivePrefix = {arXiv},
arxivId = {0803973233},
author = {Lary, David J.},
doi = {10.5772/711},
eprint = {0803973233},
file = {:Users/valdemarrolfsen/Downloads/atrificial-intelligence-in-geoscience-remote-sensing.pdf:pdf},
isbn = {9789537619343},
issn = {9789533070865},
journal = {RFID Technology, Security Vulnerabilities, and Countermeasures},
keywords = {Ehi-Eromosele C.O. Nwinyi O.C. {\&} Ajani O.O.},
pages = {75--100},
pmid = {100220790},
title = {{Artificial Intelligence in Geosience and Remote Sensing}},
year = {2010}
}
@article{Ballard1981,
abstract = {--The Hough transform is a method for "{\~{}}.{\~{}}tecting curves by exploiting the duality between points on a curve and parameters of that curve. The initial work showed how to detect both analytic curves (1'2) and non-analytic curves, (3) but these methods were restricted to binary edge images. This work was generalized to the detection of some analytic curves in grey level images, specifically lines, 14) circles 15) and parabolas/6) The line detection case is the best known of these and has been ingeniously exploited in several applications/7'89) We show how the boundaries of an arbitrary non-analytic shape can be used to construct a mapping between image space and Hough transform space. Such a mapping can be exploited to detect instances of that particular shape in an image. Furthermore, variations in the shape such as rotations, scale changes or figure-ground reversals correspond to straightforward transformations of this mapping. However, the most remarkable property is that such mappings can be composed to build mappings for complex shapes from the mappings of simpler component shapes. This makes the generalized Hough transform a kind of universal transform which can be used to find arbitrarily complex shapes.},
author = {Ballard, D H},
file = {:Users/valdemarrolfsen/Documents/prosjektoppgave/sources/shape{\_}detection/GENERALIZING{\_}THE{\_}HOUGH{\_}TRANSFORM.pdf:pdf},
journal = {Pattern Recoqnition},
keywords = {Hough transform,Image processing,Parallel algorithms,Pattern recognition,Shape recognition},
number = {2},
pages = {111--122},
title = {{Generalizing the Hough Transform To Detect Arbitrary Shapes*}},
url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.447.7083{\&}rep=rep1{\&}type=pdf},
volume = {13},
year = {1981}
}
@misc{Opencv2017,
author = {Opencv},
title = {{OpenCV 2.4.13.4 documentation}},
url = {https://docs.opencv.org/2.4/index.html},
urldate = {2017-11-12},
year = {2017}
}
@book{Worboys2003,
abstract = {GIS: A Computing Perspective, Second Edition, provides a full, up-to-date overview of the state-of-the-art in GIS, both Geographic Information Systems and the study of these systems-Geographic Information Science. Analyzing the subject from a computing perspective, the second edition explores conceptual and formal models needed to understand spatial information, and examines the representations and data structures needed to support adequate system performance. This volume also covers the special-purpose interfaces and architectures required to interact with and share spatial information, and explains the importance of uncertainty and time. The material on GIS architectures and interfaces as well as spatiotemporal information systems is almost entirely new. The second edition contains substantial new information, and has been completely reformatted to improve accessibility. Changes include: There is also a new chapter on spatial uncertaintyComplete revisions of the bibliography, index, and supporting diagramsSupplemental material is offset at the top of the page, as are references and links for further studyDefinitions of new terms are in the margins of pages where they appear, with corresponding entries in the index},
author = {Worboys, Michael F.},
booktitle = {CRC press},
isbn = {0-7484-0065-6},
issn = {0028-8144},
pages = {376},
pmid = {41376455},
title = {{GIS: A computing perspective}},
year = {2003}
}
@article{Moon2002,
abstract = {We propose an approach to accurately detecting two-dimensional (2-D) shapes. The cross section of the shape boundary is modeled as a step function. We first derive a one-dimensional (1-D) optimal step edge operator, which minimizes both the noise power and the mean squared error between the input and the filter output. This operator is found to be the derivative of the double exponential (DODE) function, originally derived by Ben-Arie and Rao. We define an operator for shape detection by extending the DODE filter along the shape's boundary contour. The responses are accumulated at the centroid of the operator to estimate the likelihood of the presence of the given shape. This method of detecting a shape is in fact a natural extension of the task of edge detection at the pixel level to the problem of global contour detection. This simple filtering scheme also provides a tool for a systematic analysis of edge-based shape detection. We investigate how the error is propagated by the shape geometry. We have found that, under general assumptions, the operator is locally linear at the peak of the response. We compute the expected shape of the response and derive some of its statistical properties. This enables us to predict both its localization and detection performance and adjust its parameters according to imaging conditions and given performance specifications. Applications to the problem of vehicle detection in aerial images, human facial feature detection, and contour tracking in video are presented.},
author = {Moon, Hankyu and Chellappa, Rama and Rosenfeld, Azriel},
doi = {10.1109/TIP.2002.800896},
file = {:Users/valdemarrolfsen/Documents/prosjektoppgave/sources/shape{\_}detection/shape{\_}detection.pdf:pdf},
isbn = {1057-7149},
issn = {10577149},
journal = {IEEE Transactions on Image Processing},
keywords = {Boundary detection,Contour tracking,Edge detection,Facial feature detection,Localization,Shape detection,Step edge,Vehicle detection},
number = {11},
pages = {1209--1227},
pmid = {18249692},
title = {{Optimal edge-based shape detection}},
volume = {11},
year = {2002}
}
@book{Patterson2017,
author = {Patterson, Josh and Gibson, Adam},
title = {{Deep Learning - A Practitioner's Approach}},
year = {2017}
}
@misc{ESA,
author = {ESA},
title = {{Overview - Copernicus}},
url = {http://www.esa.int/Our{\_}Activities/Observing{\_}the{\_}Earth/Copernicus/Overview3},
urldate = {2017-10-30}
}
@article{Lary2016,
abstract = {Learning incorporates a broad range of complex procedures. Machine learning (ML) is a subdivision of artificial intelligence based on the biological learning process. The ML approach deals with the design of algorithms to learn from machine readable data. ML covers main domains such as data mining, difficult-to-program applications, and software applications. It is a collection of a variety of algorithms (e.g. neural networks, support vector machines, self-organizing map, decision trees, random forests, case-based reasoning, genetic programming, etc.) that can provide multivariate, nonlinear, nonparametric regression or classification. The modeling capabilities of the ML-based methods have resulted in their extensive applications in science and engineering. Herein, the role of ML as an effective approach for solving problems in geosciences and remote sensing will be highlighted. The unique features of some of the ML techniques will be outlined with a specific attention to genetic programming paradigm. Furthermore, nonparametric regression and classification illustrative examples are presented to demonstrate the efficiency of ML for tackling the geosciences and remote sensing problems.},
author = {Lary, David J. and Alavi, Amir H. and Gandomi, Amir H. and Walker, Annette L.},
doi = {10.1016/j.gsf.2015.07.003},
file = {:Users/valdemarrolfsen/Downloads/machine-learning-in-remote-sensing.pdf:pdf},
isbn = {16749871},
issn = {16749871},
journal = {Geoscience Frontiers},
keywords = {Classification,Geosciences,Machine learning,Regression,Remote sensing},
number = {1},
pages = {3--10},
publisher = {Elsevier Ltd},
title = {{Machine learning in geosciences and remote sensing}},
url = {http://dx.doi.org/10.1016/j.gsf.2015.07.003},
volume = {7},
year = {2016}
}
@article{Achanta2012,
abstract = {Computer vision applications have come to rely increasingly on superpixels in recent years, but it is not always clear what constitutes a good superpixel algorithm. In an effort to understand the benefits and drawbacks of existing methods, we empirically compare five state-of-the-art superpixel algorithms for their ability to adhere to image boundaries, speed, memory efficiency, and their impact on segmentation performance. We then introduce a new superpixel algorithm, simple linear iterative clustering (SLIC), which adapts a k-means clustering approach to efficiently generate superpixels. Despite its simplicity, SLIC adheres to boundaries as well as or better than previous methods. At the same time, it is faster and more memory efficient, improves segmentation performance, and is straightforward to extend to supervoxel generation.},
author = {Achanta, Radhakrishna and Shaji, Appu and Smith, Kevin and Lucchi, Aurelien and Fua, Pascal and S{\"{u}}sstrunk, Sabine},
doi = {10.1109/TPAMI.2012.120},
file = {:Users/valdemarrolfsen/Documents/prosjektoppgave/sources/shape{\_}detection/SLIC{\_}superpixels.pdf:pdf},
isbn = {0162-8828},
issn = {01628828},
journal = {IEEE Transactions on Pattern Analysis and Machine Intelligence},
keywords = {Superpixels,clustering,k-means,segmentation},
number = {11},
pages = {2274--2281},
pmid = {22641706},
title = {{SLIC superpixels compared to state-of-the-art superpixel methods}},
volume = {34},
year = {2012}
}
